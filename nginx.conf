#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # WebSocket 连接升级映射
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen       80;
        server_name  ince.natapp1.cc;

        # 添加以下配置，用于获取真实IP
        real_ip_header X-Natapp-IP;  # 使用 natapp 传递的真实IP
        real_ip_recursive on;
        set_real_ip_from 127.0.0.1;

        # 前端项目路由
        location / {
            root   D:\dev\GigaLike_frontend\dist;
            index  index.html;
            try_files $uri $uri/ /index.html;  # 支持 Vue 路由的 history 模式
        }

        # 后端 API 代理
        location /api/ {
            proxy_pass http://localhost:8123;

            # 修改代理头部配置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_x_natapp_ip;  # 使用 natapp 的真实IP
            proxy_set_header X-Original-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Natapp-IP $http_x_natapp_ip;  # 保持 natapp 的IP

            # WebSocket 支持（用于 /api/ws/ 路径）
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_redirect off;
            proxy_buffering off;
            
            # WebSocket 特定配置
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_upgrade;
            
            # 超时配置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;  # WebSocket 可能需要长时间保持连接

            # 添加跨域支持
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers '*' always;
            add_header Access-Control-Allow-Credentials 'true' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # 错误页面配置
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
} 